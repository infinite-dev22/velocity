plugins {
    id 'java'
    id "org.javamodularity.moduleplugin" version "$module_plugin"
    id "application"
    id "org.graalvm.buildtools.native" version "$native_build_tool_plugin"
}

group = 'inc.nomard'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

graalvmNative {
    toolchainDetection = true
    agent {
        defaultMode = "standard"
        enabled = true
        modes {
            standard {
            }
        }
        builtinCallerFilter = true
        builtinHeuristicFilter = true
        enableExperimentalPredefinedClasses = false
        enableExperimentalUnsafeAllocationTracing = false
        trackReflectionMetadata = true
    }
    binaries {
        main {
            imageName = "velocity"
            mainClass = "inc.nomard.velocity.cli.VeloCli"
            debug = true
            verbose = true
            fallback = false
            sharedLibrary = false
            quickBuild = false
            richOutput = false
            buildArgs.add("-O4")
            buildArgs.add('-H:+UnlockExperimentalVMOptions')
            buildArgs.add('-H:+RemoveSaturatedTypeFlows')
//            buildArgs.add('-H:+RemoveDeadNodes')
            buildArgs.add('-H:-ReportExceptionStackTraces')
            // buildArgs.add('--link-at-build-time')
            runtimeArgs.add('--help')
        }
    }
    binaries.configureEach {
        resources.autodetect()
        buildArgs.add("--verbose")
        buildArgs.add("-H:IncludeResources=\"picocli*.json\"")
        buildArgs.add("-H:+ReportExceptionStackTraces")
    }
}

application {
    mainModule = "velocity"
    mainClass = "inc.nomard.velocity.cli.VeloCli"
}

dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.2'
    implementation 'info.picocli:picocli:4.7.6'
    implementation 'org.eclipse.jgit:org.eclipse.jgit:7.1.0.202411261347-r'

    annotationProcessor 'info.picocli:picocli-codegen:4.7.6'

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}